// ============================================
// This file is generated by AI (ChatGPT, OpenAI).
// Please review and adapt as needed before use.
// ============================================

#ifndef RNG_HPP
#define RNG_HPP

#include <random>
#include <chrono>

class Rng {
public:
    // Get the singleton instance
    inline static Rng& Instance() {
        static Rng instance;
        return instance;
    }

    // Generate any random integer
    inline int Generate() {
        return distribution(rng);
    }

    // Generate random integer in [min, max]
    inline int GenerateInRange(int min, int max) {
        std::uniform_int_distribution<int> range_dist(min, max);
        return range_dist(rng);
    }

private:
    // Private constructor
    Rng()
        : rng(std::chrono::steady_clock::now().time_since_epoch().count())
    {}

    // Delete copy constructor and assignment operator
    Rng(const Rng&) = delete;
    Rng& operator=(const Rng&) = delete;

    std::mt19937 rng;
    std::uniform_int_distribution<int> distribution;
};

#endif // RNG_HPP
